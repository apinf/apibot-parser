{  
   '/v2/user/login':{
      'get':{
         'responses':{
            '200':{
               'schema':{
                  'type':'string'
               },
               'headers':{
                  'X-Expires-After':{
                     'format':'date-time',
                     'description':'date in UTC when token expires',
                     'type':'string'
                  },
                  'X-Rate-Limit':{
                     'format':'int32',
                     'description':'calls per hour allowed by the user',
                     'type':'integer'
                  }
               },
               'description':'successful operation'
            },
            '400':{
               'description':'Invalid username/password supplied'
            }
         },
         'parameters':{
            'password':{
               'type':'string',
               'name':'password',
               'description':'The password for login in clear text',
               'in':'query',
               'required':True
            },
            'username':{
               'type':'string',
               'name':'username',
               'description':'The user name for login',
               'in':'query',
               'required':True
            }
         }
      }
   },
   '/v2/pet/{petId}':{
      'post':{
         'responses':{
            '405':{
               'description':'Invalid input'
            }
         },
         'parameters':{
            'status':{
               'type':'string',
               'name':'status',
               'description':'Updated status of the pet',
               'in':'formData',
               'required':False
            },
            'name':{
               'type':'string',
               'name':'name',
               'description':'Updated name of the pet',
               'in':'formData',
               'required':False
            },
            'petId':{
               'description':'ID of pet that needs to be updated',
               'in':'path',
               'required':True,
               'format':'int64',
               'name':'petId',
               'type':'integer'
            }
         },
         'consumes':[
            'application/x-www-form-urlencoded'
         ]
      },
      'get':{
         'responses':{
            '200':{
               'schema':{
                  '$ref':'#/definitions/Pet',
                  'x-scope':[
                     ''
                  ]
               },
               'description':'successful operation'
            },
            '404':{
               'description':'Pet not found'
            },
            '400':{
               'description':'Invalid ID supplied'
            }
         },
         'parameters':{
            'petId':{
               'description':'ID of pet to return',
               'in':'path',
               'required':True,
               'format':'int64',
               'name':'petId',
               'type':'integer'
            }
         }
      },
      'delete':{
         'responses':{
            '404':{
               'description':'Pet not found'
            },
            '400':{
               'description':'Invalid ID supplied'
            }
         },
         'parameters':{
            'petId':{
               'description':'Pet id to delete',
               'in':'path',
               'required':True,
               'format':'int64',
               'name':'petId',
               'type':'integer'
            },
            'api_key':{
               'type':'string',
               'name':'api_key',
               'in':'header',
               'required':False
            }
         }
      }
   },
   '/v2/user/logout':{
      'get':{
         'responses':{
            'default':{
               'description':'successful operation'
            }
         },
         'parameters':{

         }
      }
   },
   '/v2/store/inventory':{
      'get':{
         'responses':{
            '200':{
               'schema':{
                  'additionalProperties':{
                     'format':'int32',
                     'type':'integer'
                  },
                  'type':'object'
               },
               'description':'successful operation'
            }
         },
         'parameters':{

         }
      }
   },
   '/v2/store/order':{
      'post':{
         'responses':{
            '200':{
               'schema':{
                  '$ref':'#/definitions/Order',
                  'x-scope':[
                     ''
                  ]
               },
               'description':'successful operation'
            },
            '400':{
               'description':'Invalid Order'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  '$ref':'#/definitions/Order',
                  'x-scope':[
                     ''
                  ]
               },
               'name':'body',
               'description':'order placed for purchasing the pet',
               'in':'body',
               'required':True
            }
         }
      }
   },
   '/v2/user':{
      'post':{
         'responses':{
            'default':{
               'description':'successful operation'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  '$ref':'#/definitions/User',
                  'x-scope':[
                     ''
                  ]
               },
               'name':'body',
               'description':'Created user object',
               'in':'body',
               'required':True
            }
         }
      }
   },
   '/v2/user/{username}':{
      'put':{
         'responses':{
            '404':{
               'description':'User not found'
            },
            '400':{
               'description':'Invalid user supplied'
            }
         },
         'parameters':{
            'username':{
               'type':'string',
               'name':'username',
               'description':'name that need to be updated',
               'in':'path',
               'required':True
            },
            'body':{
               'schema':{
                  '$ref':'#/definitions/User',
                  'x-scope':[
                     ''
                  ]
               },
               'name':'body',
               'description':'Updated user object',
               'in':'body',
               'required':True
            }
         }
      },
      'get':{
         'responses':{
            '200':{
               'schema':{
                  '$ref':'#/definitions/User',
                  'x-scope':[
                     ''
                  ]
               },
               'description':'successful operation'
            },
            '404':{
               'description':'User not found'
            },
            '400':{
               'description':'Invalid username supplied'
            }
         },
         'parameters':{
            'username':{
               'type':'string',
               'name':'username',
               'description':'The name that needs to be fetched. Use user1 for testing. ',
               'in':'path',
               'required':True
            }
         }
      },
      'delete':{
         'responses':{
            '404':{
               'description':'User not found'
            },
            '400':{
               'description':'Invalid username supplied'
            }
         },
         'parameters':{
            'username':{
               'type':'string',
               'name':'username',
               'description':'The name that needs to be deleted',
               'in':'path',
               'required':True
            }
         }
      }
   },
   '/v2/pet/{petId}/uploadImage':{
      'post':{
         'responses':{
            '200':{
               'schema':{
                  '$ref':'#/definitions/ApiResponse',
                  'x-scope':[
                     ''
                  ]
               },
               'description':'successful operation'
            }
         },
         'parameters':{
            'petId':{
               'description':'ID of pet to update',
               'in':'path',
               'required':True,
               'format':'int64',
               'name':'petId',
               'type':'integer'
            },
            'additionalMetadata':{
               'type':'string',
               'name':'additionalMetadata',
               'description':'Additional data to pass to server',
               'in':'formData',
               'required':False
            },
            'file':{
               'type':'file',
               'name':'file',
               'description':'file to upload',
               'in':'formData',
               'required':False
            }
         },
         'consumes':[
            'multipart/form-data'
         ]
      }
   },
   '/v2/pet/findByTags':{
      'get':{
         'responses':{
            '200':{
               'schema':{
                  'items':{
                     '$ref':'#/definitions/Pet',
                     'x-scope':[
                        ''
                     ]
                  },
                  'type':'array'
               },
               'description':'successful operation'
            },
            '400':{
               'description':'Invalid tag value'
            }
         },
         'parameters':{
            'tags':{
               'collectionFormat':'multi',
               'description':'Tags to filter by',
               'in':'query',
               'required':True,
               'name':'tags',
               'items':{
                  'type':'string'
               },
               'type':'array'
            }
         }
      }
   },
   '/v2/user/createWithList':{
      'post':{
         'responses':{
            'default':{
               'description':'successful operation'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  'items':{
                     '$ref':'#/definitions/User',
                     'x-scope':[
                        ''
                     ]
                  },
                  'type':'array'
               },
               'name':'body',
               'description':'List of user object',
               'in':'body',
               'required':True
            }
         }
      }
   },
   '/v2/user/createWithArray':{
      'post':{
         'responses':{
            'default':{
               'description':'successful operation'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  'items':{
                     '$ref':'#/definitions/User',
                     'x-scope':[
                        ''
                     ]
                  },
                  'type':'array'
               },
               'name':'body',
               'description':'List of user object',
               'in':'body',
               'required':True
            }
         }
      }
   },
   '/v2/store/order/{orderId}':{
      'get':{
         'responses':{
            '200':{
               'schema':{
                  '$ref':'#/definitions/Order',
                  'x-scope':[
                     ''
                  ]
               },
               'description':'successful operation'
            },
            '404':{
               'description':'Order not found'
            },
            '400':{
               'description':'Invalid ID supplied'
            }
         },
         'parameters':{
            'orderId':{
               'description':'ID of pet that needs to be fetched',
               'in':'path',
               'required':True,
               'minimum':1.0,
               'name':'orderId',
               'format':'int64',
               'type':'integer',
               'maximum':10.0
            }
         }
      },
      'delete':{
         'responses':{
            '404':{
               'description':'Order not found'
            },
            '400':{
               'description':'Invalid ID supplied'
            }
         },
         'parameters':{
            'orderId':{
               'description':'ID of the order that needs to be deleted',
               'in':'path',
               'required':True,
               'minimum':1.0,
               'name':'orderId',
               'type':'integer',
               'format':'int64'
            }
         }
      }
   },
   '/v2/pet/findByStatus':{
      'get':{
         'responses':{
            '200':{
               'schema':{
                  'items':{
                     '$ref':'#/definitions/Pet',
                     'x-scope':[
                        ''
                     ]
                  },
                  'type':'array'
               },
               'description':'successful operation'
            },
            '400':{
               'description':'Invalid status value'
            }
         },
         'parameters':{
            'status':{
               'collectionFormat':'multi',
               'description':'Status values that need to be considered for filter',
               'in':'query',
               'required':True,
               'name':'status',
               'items':{
                  'enum':[
                     'available',
                     'pending',
                     'sold'
                  ],
                  'type':'string',
                  'default':'available'
               },
               'type':'array'
            }
         }
      }
   },
   '/v2/pet':{
      'put':{
         'responses':{
            '405':{
               'description':'Validation exception'
            },
            '404':{
               'description':'Pet not found'
            },
            '400':{
               'description':'Invalid ID supplied'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  '$ref':'#/definitions/Pet',
                  'x-scope':[
                     ''
                  ]
               },
               'name':'body',
               'description':'Pet object that needs to be added to the store',
               'in':'body',
               'required':True
            }
         },
         'consumes':[
            'application/json',
            'application/xml'
         ]
      },
      'post':{
         'responses':{
            '405':{
               'description':'Invalid input'
            }
         },
         'parameters':{
            'body':{
               'schema':{
                  '$ref':'#/definitions/Pet',
                  'x-scope':[
                     ''
                  ]
               },
               'name':'body',
               'description':'Pet object that needs to be added to the store',
               'in':'body',
               'required':True
            }
         },
         'consumes':[
            'application/json',
            'application/xml'
         ]
      }
   }
}
